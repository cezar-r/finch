// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runfinch/finch/pkg/config (interfaces: LoadSystemDeps)
//
// Generated by this command:
//
//	mockgen -copyright_file=../../copyright_header -destination=../mocks/pkg_config_load_system_deps.go -package=mocks -mock_names LoadSystemDeps=LoadSystemDeps . LoadSystemDeps
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// LoadSystemDeps is a mock of LoadSystemDeps interface.
type LoadSystemDeps struct {
	ctrl     *gomock.Controller
	recorder *LoadSystemDepsMockRecorder
	isgomock struct{}
}

// LoadSystemDepsMockRecorder is the mock recorder for LoadSystemDeps.
type LoadSystemDepsMockRecorder struct {
	mock *LoadSystemDeps
}

// NewLoadSystemDeps creates a new mock instance.
func NewLoadSystemDeps(ctrl *gomock.Controller) *LoadSystemDeps {
	mock := &LoadSystemDeps{ctrl: ctrl}
	mock.recorder = &LoadSystemDepsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *LoadSystemDeps) EXPECT() *LoadSystemDepsMockRecorder {
	return m.recorder
}

// NumCPU mocks base method.
func (m *LoadSystemDeps) NumCPU() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NumCPU")
	ret0, _ := ret[0].(int)
	return ret0
}

// NumCPU indicates an expected call of NumCPU.
func (mr *LoadSystemDepsMockRecorder) NumCPU() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NumCPU", reflect.TypeOf((*LoadSystemDeps)(nil).NumCPU))
}
